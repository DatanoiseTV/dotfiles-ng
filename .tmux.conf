# ============================================================================
# Modern tmux Configuration for macOS/Linux Development
# Optimized for embedded C++, Go, Vue.js, DevOps workflows
# ============================================================================

# Use Ctrl-a as prefix (easier to hit than Ctrl-b)
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# ============================================================================
# WINDOW & PANE MANAGEMENT
# ============================================================================

# Easier splits: | for vertical, - for horizontal
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# New windows in current path
bind c new-window -c "#{pane_current_path}"

# Make pane switching easy with alt + arrow (macOS Terminal/iTerm friendly)
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift + arrow to switch windows
bind -n S-Left previous-window
bind -n S-Right next-window

# macOS friendly pane resizing (Cmd equivalents using Option)
bind -n M-H resize-pane -L 5
bind -n M-L resize-pane -R 5
bind -n M-K resize-pane -U 5
bind -n M-J resize-pane -D 5

# ============================================================================
# MOUSE & KEYBOARD
# ============================================================================

# Enable mouse (click to select pane, resize with drag, scroll)
set -g mouse on

# Mouse behavior improvements
# Click on window name to switch to that window
bind-key -T root MouseDown1Status select-window -t =

# Double click on pane to maximize/restore
bind-key -n DoubleClick1Pane if-shell -F -t = "#{==:#{window_panes},1}" \
    "break-pane" "select-pane -t=; resize-pane -Z"

# Right click to open context menu (paste from clipboard)
bind-key -n MouseDown3Pane if-shell -F -t = "#{mouse_any_flag}" \
    "select-pane -t=; send-keys C-c; run-shell 'pbpaste | tmux load-buffer -; tmux paste-buffer'" \
    "select-pane -t="

# Vi mode in copy mode
setw -g mode-keys vi

# Vi-style copy mode bindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# macOS clipboard integration
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# Mouse wheel scrolling in copy mode
bind-key -T copy-mode-vi WheelUpPane send-keys -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X scroll-down

# ============================================================================
# PERFORMANCE & BEHAVIOR
# ============================================================================

# More history scrollback
set-option -g history-limit 50000

# Faster key repetition
set -s escape-time 0
set -g repeat-time 600

# Start windows and panes at 1 (easier to reach)
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when one is closed
set -g renumber-windows on

# Monitor activity in other windows
setw -g monitor-activity on
set -g visual-activity on

# ============================================================================
# APPEARANCE & STATUS BAR
# ============================================================================

# 256 color support
set -g default-terminal "screen-256color"

# Status bar configuration
set -g status-interval 1
set -g status-position bottom
set -g status-justify left

# Status bar colors (professional dark theme)
set -g status-bg colour234
set -g status-fg colour137
set -g status-left-length 20
set -g status-right-length 100

# Window status
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

# Left status: session name
set -g status-left '#[fg=colour233,bg=colour241,bold] #S #[fg=colour241,bg=colour234,nobold]'

# Right status: git branch, date/time, battery (macOS)
set -g status-right '#[fg=colour241,bg=colour234]#[fg=colour233,bg=colour241] %Y-%m-%d #[fg=colour233,bg=colour245] %H:%M:%S '

# Pane borders
set -g pane-border-style fg=colour238
set -g pane-active-border-style fg=colour51

# Message colors
set -g message-style bg=colour166,fg=colour232

# ============================================================================
# DEVELOPMENT WORKFLOW SHORTCUTS
# ============================================================================

# Quick config reload
bind r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

# Development layout presets
bind D new-window -n 'dev' -c "#{pane_current_path}" \; \
       split-window -h -p 30 -c "#{pane_current_path}" \; \
       split-window -v -p 50 -c "#{pane_current_path}" \; \
       select-pane -t 0

# Full-stack development layout (backend/frontend/logs)
bind F new-window -n 'fullstack' -c "#{pane_current_path}" \; \
       split-window -h -p 50 -c "#{pane_current_path}" \; \
       split-window -v -p 30 -c "#{pane_current_path}" \; \
       select-pane -t 0

# Embedded development layout (code/build/serial)
bind E new-window -n 'embedded' -c "#{pane_current_path}" \; \
       split-window -h -p 40 -c "#{pane_current_path}" \; \
       split-window -v -p 50 -c "#{pane_current_path}" \; \
       select-pane -t 0

# Quick window switching for common development tasks
bind g new-window -n 'git' 'git status; $SHELL'
bind h new-window -n 'htop' 'htop'
bind l new-window -n 'logs' 'tail -f *.log 2>/dev/null || echo "No log files found"; $SHELL'

# ============================================================================
# SESSION MANAGEMENT
# ============================================================================

# Quick session switching
bind s choose-tree -s
bind w choose-window

# Kill session/window shortcuts
bind X confirm-before -p "kill-session #S? (y/n)" kill-session
bind x confirm-before -p "kill-window #W? (y/n)" kill-window

# ============================================================================
# PLUGIN SUPPORT (if using tpm)
# ============================================================================

# List of plugins (uncomment if you want to use tpm)
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'

# Initialize TMUX plugin manager (keep this line at the very bottom)
# run '~/.tmux/plugins/tpm/tpm'